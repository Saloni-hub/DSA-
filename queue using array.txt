import java.util.*;
import java.io.*;
class Queue {
    int rear,front,size;
    int capacity;
    int array[];
    public Queue(int capacity) {
        this.capacity=capacity;
        front=this.size=0;
        rear=capacity-1;
        array=new int[this.capacity];
    }
    boolean isFull(Queue qu) {
        return (qu.size==qu.capacity);
    }
    boolean isEmpty(Queue qu) {
        return (qu.size==0);
    }
    void enqueue(int item) {
        if(isFull(this)) 
             return;
        this.rear=(this.rear+1)%this.capacity;
        this.array[this.rear]=item;
        this.size=this.size+1;
        System.out.println(item + " insert item");
    }
    int dequeue() {
        if(isEmpty(this))
            return Integer.MIN_VALUE;
        int item=this.array[this.front];
        this.front=(this.front+1)%this.capacity;
        this.size=this.size-1;
        return item;
    }
    int front() {
        if(isEmpty(this))
             return Integer.MIN_VALUE;
        return this.array[this.front];
    }
    int rear() {
        if(isEmpty(this))
             return Integer.MIN_VALUE;
        return this.array[this.rear];
    }
}
class Main {
    public static void main(String args[]) {
        Queue quu=new Queue(1000);
        quu.enqueue(15);
        quu.enqueue(23);
        quu.enqueue(12);
        quu.enqueue(16);
        System.out.println(quu.dequeue() 
                           + " dequeued from queue\n"); 
  
        System.out.println("Front item is "
                           + quu.front()); 
  
        System.out.println("Rear item is "
                           + quu.rear()); 

    }
}